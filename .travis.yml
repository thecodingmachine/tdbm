language: php
php:
- 7.1
cache:
  directories:
    - $HOME/.composer/cache
matrix:
  include:
    - php: 7.2
      env: PREFER_LOWEST="" DB=mysql RUN_PHPSTAN=1 RUN_CSCHECK=1 RUN_REQUIRECHECKER=1 RUN_PERF_TEST=1
      services:
        - mysql
    - php: 7.3
      env: PREFER_LOWEST="" DB=mysql NO_WEAKREF=1
      services:
        - mysql
    - php: 7.1
      env: PREFER_LOWEST="" DB=mysql COVERALLS=true
      services:
        - mysql
    - php: 7.1
      env: PREFER_LOWEST="--prefer-lowest" DB=mysql
      services:
        - mysql
    - php: 7.1
      env: PREFER_LOWEST="" DB=mysql8
      sudo: required
      services:
      - docker
    - php: 7.1
      env: PREFER_LOWEST="" DB=mariadb
      addons:
        mariadb: '10.3'
    - php: 7.1
      env: PREFER_LOWEST="--prefer-lowest" DB=mariadb
      addons:
        mariadb: '10.3'
    - php: 7.1
      env: PREFER_LOWEST="--prefer-lowest" DB=oracle PHPUNITFILE="-c phpunit.oracle.xml"
      sudo: required
      services:
        - docker
    - php: 7.1
      env: PREFER_LOWEST="" DB=oracle PHPUNITFILE="-c phpunit.oracle.xml"
      sudo: required
      services:
        - docker
    - php: 7.1
      env: PREFER_LOWEST="--prefer-lowest" DB=postgres PHPUNITFILE="-c phpunit.postgres.xml"
      addons:
        postgresql: "9.6"
      services:
        - postgresql
    - php: 7.1
      env: PREFER_LOWEST="" DB=postgres PHPUNITFILE="-c phpunit.postgres.xml"
      addons:
        postgresql: "9.6"
      services:
        - postgresql
  allow_failures:
    - php: 7.1
      env: PREFER_LOWEST="" DB=oracle PHPUNITFILE="-c phpunit.oracle.xml"
    - php: 7.1
      env: PREFER_LOWEST="--prefer-lowest" DB=oracle PHPUNITFILE="-c phpunit.oracle.xml"
env:
  global:
  - GIT_NAME: "'Couscous auto deploy'"
  - GIT_EMAIL: d.negrier@thecodingmachine.com
  - GH_REF: github.com/thecodingmachine/tdbm
  - secure: pAdXEBkhe0KJbbZEP61lcZzvKKMkVK2RDIZTf1RzjQRgk+PxIG5JLBiHKuvG3MgtFjZbdtl2Vf6nAZbeMyy3H0eCryQCjjqdb5mS3eDekJ4WwviN6hQDc7+Xw6R1saHvDvJs9GQENUzHPWfAfY7LuwUgHXdc+BCLZmV+j0H6liZMNlXIYqP1kdwl7u5a/Y3FvXFws6R7A0giUBCb4HOYkInaXV0yzuAEsB6XBDbTjw3EqI0GBs6746O4tn7NOGaFlFSZan6RZe6jEkw7A+U3xLCfFnIN2q1uk/tk511KkOcSFQyGKRMDSKRDesdMQaOt/ze14+t+ISTqOSn8bUrCBhpj4VsjvzZE0FOS3WWGXpayODqdxuDjacwCZwiOHG7FWbwyQ3APiIrfO82ABbI8HoJURbgOb/Qnl2iPg9tCcvDqhsHxppGq5oOyhBq+GGtucOTW6lO6QnlMaez4nJJ7a3cn8WJB6NxaCZLii3aOXSLMahzFCcQxtq9/WfKwbOtf4GWUSLk28kDMov5h7tzuuHXmzOivzRxztQ9WC2GT7eMCIL8mvWFRMNiLJTE03J0ZbQDZ9N4OU3tdcgjV+d6pU6bu4SrCFtjCJnLaeLfIjoHkx+kK+kyCOQpOcuHMM6zq8l+ztd7VGZ3Br8HJTs1CxiWXrs+JIx2i8V06IE8nLKA=
before_script:
- composer update --prefer-dist
# For some reason, $PREFER_LOWEST will fail unless a composer update has been run before...
- if [ "$PREFER_LOWEST" = "--prefer-lowest" ] ; then composer update --prefer-dist --prefer-lowest; fi
- if [ -z "$NO_WEAKREF" ] ; then pecl install weakref-beta; fi
script:
# Let's run the Oracle script only when the password is available (it is not available in forks unfortunately)
- |
  if [[ "$COVERALLS" != "true" ]] ; then export NO_COVERAGE="--no-coverage"; fi;
  if [ "$DB" == "oracle" ] ; then
    docker run -v $(pwd):/app -v $(pwd)/tests/Fixtures/oracle-startup.sql:/docker-entrypoint-initdb.d/oracle-startup.sql moufmouf/oracle-xe-php vendor/bin/phpunit $PHPUNITFILE $NO_COVERAGE;
  elif [ "$DB" == "mysql8" ] ; then
    sudo /etc/init.d/mysql stop;
    tests/phpunit-mysql8.sh
  else
    echo ./vendor/bin/phpunit $PHPUNITFILE $NO_COVERAGE;
    ./vendor/bin/phpunit $PHPUNITFILE $NO_COVERAGE;
  fi
- |
  if [ "$RUN_CSCHECK" == "1" ] ; then
    composer cscheck
  fi
- |
  if [ "$RUN_PHPSTAN" == "1" ] ; then
    composer phpstan
  fi
- |
  if [ "$RUN_REQUIRECHECKER" == "1" ] ; then
    composer require-checker
  fi
- |
  if [ "$RUN_PERF_TEST" == "1" ] ; then
    echo "***** Running PHPBENCH on current branch *****" && \
    ./phpbench.dist.sh run --tag=current_pr --store
  fi
after_success:
  - |
    if [ "$RUN_PERF_TEST" == "1" ] && [ "${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH}" != "master" ] ; then
      git fetch --unshallow && \
      git checkout master && \
      composer update && \
      echo "***** Running PHPBENCH on master branch for comparison *****" && \
      ./phpbench.dist.sh run --tag=master --store && \
      ./phpbench.dist.sh report --uuid=tag:current_pr --uuid=tag:master --report='{extends: compare, compare: tag}'
    fi
after_script:
- if [ "$COVERALLS" = "true" ] ; then ./vendor/bin/php-coveralls -v; fi
- if [ "$COVERALLS" = "true" ] ; then vendor/bin/couscous travis-auto-deploy --php-version=7.1 -vvv; fi
